#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#include<malloc.h>
 
 
typedef struct node
{
    int data;
    struct node *next;
}node;
 
node* delete_tail(struct node *head );
node *insert_head(struct node *temp , int x);
node* delete_head(struct node* x);
node* insert_tail(struct node* x, int z );
void diplay(struct node *s);
 
 
void main()
{
    struct node *head = NULL;
    struct node *second = NULL;
    head = (struct node*)malloc(sizeof(struct node));
    second = (struct node*)malloc(sizeof(struct node));
    int c = 0;
    int x;
    int exit = 0;
    head = NULL;
   
   
   
    while(exit == 0){
        printf("\n1.Insert at front \n2.Insert at tail \n3.Delete at tail  \n4.Delete at head \n5.Display the linked list\n6.exit");
        printf("\n\nEnter your choice :");
        scanf("%d",&c);
 
       
 
    switch(c)
    {
        case 1:
          printf("\nEnter a node at head:");
          scanf("%d",&x);
          head = insert_head(head , x);
          break;
        case 2:
           printf("\nEnter a node at tail :");
           scanf("%d",&x);
           head = insert_tail( head , x );
           break;
        case 3:
          head = delete_tail(head);
        break;
        case 4 :
          head = delete_head(head);
          break;
        case 5:
           diplay(head);
        break;
        case 6:
           exit=1;
             
    }
    }
   
}
 
// Return a node type of node* //
node* insert_head(struct node *temp , int x)
{
    struct node *n = NULL;
    n = (struct node*)malloc(sizeof(struct node));
    n -> data = x;
    if(temp==NULL)
    {
        n->next=NULL;
        return (n);
    }
    n->next = temp;
   
    return (n);
}
node* delete_tail(struct node *head)
{
    if(head==NULL)
    {
        printf("NO element is present to delete");
        return NULL;
    }
    struct node *n = NULL;
    n = (struct node*)malloc(sizeof(struct node));
    n=head;
   
    if(n->next == NULL)
    {
        head=NULL;
        return (head);
    }
    while((n->next)->next!= NULL)
    {
        n=n->next;
    }
    n->next = NULL;
    return head;
}
node* delete_head(struct node* x)
{
    if(x == NULL)
    {
        printf("\nNo element to delete\n");
        return NULL;
    }
   return x->next;
}
node* insert_tail(struct node* x , int z)
{
    struct node *new = NULL;
    struct node *x1 = x;
    new = (struct node*)malloc(sizeof(struct node));
   
    new->data =z ;
   
    while (x->next!=NULL)
    {
        x = x->next ;
    }
    x -> next = new ;
    new ->next = NULL;
    return x1;
}
void diplay(struct node *temp)
{
    if(temp == NULL)
    {
        printf ("\nLIST IS EMPTY! \n");
        return;
    }
    printf("LINKED LIST have NODES : [ ");
    while (temp != NULL )
    {
        printf("%d ",temp->data);
        temp= temp->next;
    }
    printf(" ]");
}
