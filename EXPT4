#include <stdio.h>
#define MAX 3
int arr[MAX];
int rear = - 1;
int front = - 1;
void deleteAtRear();
void insertAtFront(int n);
void insertAtRear();
void deleteAtfront();
void display();
void main()
{
   int n;
   int choice;
 do{
 printf("1.Add at rear \n");
 printf("2.Add at front \n");
 printf("3.delete at front \n");
 printf("4.delete at rear \n");
 printf("5.display\n");
 printf("6.exit\n");
 printf("Enter your choice : ");
 scanf("%d", &choice);
 switch (choice)
 {
 case 1:
 insertAtRear();
 break;
 case 2:  
   scanf("%d",&n);
   insertAtFront(n);
   break;
 case 3:
 deleteAtfront();
 break;
 case 4:
  deleteAtRear();
  break;
 case 5:
 display();
 break;
 case 6:
 printf("program closed");
 default:
 printf("Inavlid choice \n");
 }
 printf("\n");
}while(choice!=6);
}
void insertAtFront(int n)
{
   if((front==0 && rear ==MAX-1) || front>rear)
      { printf("Queue Overflow \n");  
        return;
      }
   else
     {
        if(front==-1)
          front=0;
        else
          front=front-1;            
     }
     arr[front]=n;
}
void deleteAtRear()
{
   int n;
   if(rear<front||rear==0)
   {   printf("Underflow");  return;}
   else
   {
      if(rear==front)
      {
         n=arr[rear] ;
       front=rear=0;
      }
      else
        rear = rear -1;
       n= arr[rear+1] ;
   }
 printf("\n%d",n);
}
void insertAtRear()
{
    int ele;
    if (rear == MAX - 1)
      {
         printf("Queue Overflow \n");
         return;
      }
 else
   {
      if (front == - 1)
         {
              front = 0;
         }
      printf("Enter the element to add: ");
      scanf("%d", &ele);
      rear = rear + 1;
      arr[rear] = ele;
   }
}
void deleteAtfront()
{
    if (front == - 1 || front > rear)
       {
         printf("Queue Underflow \n");
          return ;
       }
 else
   {
       printf("Deleted Element is:%d\n",arr[front]);
       if(front==rear)
       {
          front=rear=-1;
       }
       else  
       {
          front++;
       }
   }
}
void display()
{
   int i;
   if (front == - 1||front>rear)
       printf("Queue is empty\n");
   else
   {
       printf("Queue is:\n");
        for (i = front; i <= rear; i++){
                 printf("%d ", arr[i]);
            }
       printf("\n");
   }
}
